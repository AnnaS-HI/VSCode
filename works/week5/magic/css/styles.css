/* Основные стили для всей страницы */

body {
  font-family: "Great Vibes", cursive; /* Используем декоративный шрифт для всего текста на странице */
  text-shadow: 1px 1px 4px rgba(0, 0, 0); /* Тень для текста, добавляет объем и лучшее восприятие на фоне */
  letter-spacing: 5px; /* Интервал между символами для придания элегантности тексту */
  background-image: linear-gradient(rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.7)),
    url("../assets/image/background.webp"); /* Фоновое изображение и градиент для создания атмосферы волшебства */
  background-size: cover; /* Изображение занимает всю доступную область, сохраняя пропорции */
  background-position: center; /* Центрируем фоновое изображение */
  background-attachment: fixed; /* Фон остается на месте при прокрутке страницы */
  color: #ec5c08; /* Основной цвет текста на странице, яркий оранжевый оттенок для контраста с фоном */
  padding-top: 100px; /* Отступ сверху, чтобы текст не был перекрыт фиксированным меню */
}

/* Стили заголовка первой страницы */
h1 {
  margin: 0; /* Убираем внешние отступы, чтобы заголовок не двигался относительно родительского контейнера */
  padding: 10px 0; /* Добавляем вертикальные отступы для лучшего расположения */
  font-size: 2.5em; /* Задаем крупный размер шрифта для заголовка, чтобы он был легко заметен */
  font-weight: bold; /* Делаем текст жирным для акцента */
}

/* Стили для фиксированного меню (header) */
header {
  position: fixed; /* Фиксированное позиционирование — меню остается на месте при прокрутке страницы */
  top: 0; /* Закрепляем меню в верхней части окна */
  left: 0; /* Меню закреплено по левому краю экрана */
  width: 100%; /* Меню занимает всю ширину экрана */
  background-color: rgba(
    0,
    0,
    0,
    0.7
  ); /* Черный полупрозрачный фон для улучшения контраста с текстом */
  z-index: 1000; /* Высокий z-index, чтобы меню оставалось поверх других элементов страницы */
  padding: 10px 0; /* Вертикальные отступы, чтобы меню выглядело аккуратнее */
  text-align: center; /* Центрируем содержимое меню (например, ссылки) */
}

/* Стили для навигационного меню */

/* Стиль для списка внутри меню */
nav ul {
  list-style-type: none; /* Убираем маркеры списка */
  display: flex; /* Используем flexbox для размещения элементов списка в одну строку */
  justify-content: center; /* Выравниваем элементы списка по центру горизонтально */
  margin: 0; /* Убираем внешние отступы, чтобы элементы списка находились строго в центре */
  padding: 0; /* Убираем внутренние отступы для корректного размещения элементов */
}

/* Стили для каждого элемента списка (li) */
nav ul li {
  margin: 0 15px; /* Добавляем горизонтальные отступы между элементами меню */
}

/* Стили для ссылок внутри элементов списка */
nav ul li a {
  color: #0c5c24; /* Задаем цвет текста для ссылок — темно-зеленый для хорошего контраста */
  text-decoration: none; /* Убираем стандартное подчеркивание ссылок */
  font-weight: bold; /* Делаем текст жирным для большей заметности */
  font-size: 1.2em; /* Увеличиваем размер шрифта для лучшей читаемости и акцента */
}

/* Стиль для ссылок при наведении курсора */
nav ul li a:hover {
  text-decoration: underline; /* Подчеркиваем ссылку при наведении для визуальной обратной связи */
}

/* Стили для заголовка второго уровня */
h2 {
  text-align: center; /* Центрируем заголовок по горизонтали */
  color: #ec5c08; /* Задаем цвет текста — оранжевый оттенок для соответствия основной теме сайта */
  font-size: 2em; /* Увеличиваем размер шрифта до 2em для более выразительного заголовка */
  margin-top: 20px; /* Добавляем верхний отступ, чтобы заголовок был немного отдален от предыдущих элементов */
}

/* Стили для контейнера галереи */
.gallery-container {
  display: grid; /* Используем CSS Grid для удобного размещения карточек в виде сетки */
  grid-template-columns: repeat(
    3,
    minmax(200px, 1fr)
  ); /* Задаем 3 колонки одинаковой ширины; таким образом, всегда будет три карточки в ряд */
  gap: 20px; /* Отступы между карточками для создания воздушного пространства и лучшего восприятия */
  padding: 20px; /* Внутренние отступы, чтобы карточки не "прилипали" к краям контейнера */
  max-width: 1200px; /* Ограничиваем ширину галереи до 1200px, чтобы не растягивать её слишком сильно на больших экранах */
  margin: 0 auto; /* Центрируем контейнер галереи на странице */
}

/* Основные стили для карточек */
.card {
  width: 100%; /* Ширина карточки будет адаптироваться под размер колонки, что позволяет гибко подстраивать размер карточки */
  height: 450px; /* Фиксированная высота для всех карточек, чтобы они выглядели одинаково */
  background-color: rgba(
    231,
    128,
    10,
    0.25
  ); /* Полупрозрачный фон карточки с оранжевым оттенком, чтобы создать эффект магии */
  border-radius: 10px; /* Скругленные углы карточки для придания плавного, эстетически приятного вида */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Тень под карточкой для добавления глубины и объема */
  perspective: 1000px; /* Перспектива для создания 3D-эффекта поворота карточки при наведении */
  overflow: hidden; /* Ограничиваем содержимое карточки, чтобы ничего не выходило за её границы */
  transition: transform 0.3s ease; /* Плавная анимация увеличения масштаба при наведении мыши */
  padding: 0; /* Убираем внутренние отступы */
}

/* Внутренние стили для элемента, отвечающего за анимацию 3D-поворота карточки */
.card-inner {
  position: relative; /* Используем относительное позиционирование, чтобы внутри элемента можно было легко размещать переднюю и заднюю стороны */
  width: 100%; /* Занимает всю ширину карточки */
  height: 100%; /* Занимает всю высоту карточки */
  transform-style: preserve-3d; /* Сохраняем 3D-трансформацию, чтобы обе стороны (передняя и задняя) отображались правильно */
  transition: transform 0.6s ease; /* Плавный переход при повороте карточки */
}

/* Стили для текста внутри карточек */
.card p {
  margin-top: 10px; /* Отступ сверху для отделения текста от изображения */
  font-size: 1rem; /* Используем rem вместо em для лучшей адаптивности размера текста */
  font-weight: bold; /* Жирное начертание текста для выделения описания карточек */
  font-family: "Cormorant Garamond", serif; /* Элегантный шрифт для создания волшебной атмосферы */
  font-style: italic; /* Курсив для придания текста более утонченного вида */
  text-shadow: 1px 1px 4px rgba(0, 0, 0); /* Тень текста для улучшения читабельности на фоне */
  letter-spacing: 3px; /* Расстояние между буквами, чтобы текст выглядел просторнее и атмосфернее */
  color: #0f8633; /* Тёмно-зелёный цвет для придания магического оттенка */
}

/* Передняя и задняя стороны карточки */
.card-front,
.card-back {
  position: absolute; /* Абсолютное позиционирование, чтобы обе стороны карточки занимали одно и то же место */
  width: 100%; /* Ширина сторон равна ширине карточки */
  height: 100%; /* Высота сторон равна высоте карточки */
  backface-visibility: hidden; /* Скрывает заднюю сторону, когда карточка поворачивается */
  border-radius: 10px; /* Скруглённые углы для придания эстетического вида */
  display: flex; /* Используем Flexbox для удобного выравнивания контента внутри */
  flex-direction: column; /* Элементы располагаются вертикально (колонной) */
  align-items: center; /* Выравниваем элементы по центру по горизонтали */
  justify-content: center; /* Выравниваем элементы по центру по вертикали */
  padding: 10px; /* Отступы внутри карточки для создания пространства вокруг контента */
  box-sizing: border-box; /* Учитываем padding в общей ширине и высоте элемента */
  object-fit: cover; /* Адаптация изображения по размеру карточки без искажения пропорций (эта строка здесь излишняя для текста, можно удалить) */
}

/* Задняя сторона с текстом */
.card-back {
  transform: rotateY(
    180deg
  ); /* Поворачиваем заднюю сторону на 180 градусов для создания эффекта переворота */
  background-color: rgba(
    0,
    0,
    0,
    0.7
  ); /* Тёмный полупрозрачный фон для текста, чтобы выделить его */
  color: #fff; /* Белый цвет текста для контраста с тёмным фоном */
  overflow: hidden; /* Ограничиваем текст, чтобы он не выходил за пределы карточки */
  text-align: center; /* Выравниваем текст по центру, чтобы он выглядел аккуратно */
}

/* Эффект переворота при наведении */
.card:hover .card-inner {
  transform: rotateY(
    180deg
  ); /* Поворачиваем всю внутреннюю часть карточки на 180 градусов при наведении мыши, чтобы показать заднюю сторону */
}

/* Стиль для изображения на передней стороне карточки */
.card-front img {
  width: 80%; /* Изображение занимает всю ширину карточки */
  height: 60%; /* Изображение занимает всю высоту карточки */
  object-fit: cover; /* Заполняем карточку изображением, сохраняя пропорции и не искажая его */
  border-radius: 10px; /* Скругляем углы изображения, чтобы соответствовать общей стилистике карточки */
  margin: 0; /* Убираем любые внешние отступы для плотного расположения внутри карточки */
}

/* Стили для текста на передней стороне карточки */
.card-front p {
  margin-top: 10px; /* Отступ сверху для создания пространства между изображением и текстом */
  font-size: 1.1em; /* Чуть увеличиваем размер текста для лучшей читаемости */
  color: #169b3e; /* Цвет текста: зелёный, чтобы гармонировать с волшебной тематикой */
  font-weight: bold; /* Делаем текст жирным для акцента */
  text-align: center; /* Выравниваем текст по центру для улучшения читаемости и визуальной гармонии на карточке */
}

/* Стили для текста на задней стороне карточки */
.card-back p {
  font-size: 0.9em; /* Уменьшаем размер шрифта, чтобы вместить больше текста */
  line-height: 1.4; /* Улучшаем читабельность текста, добавляя немного больше расстояния между строками */
  overflow-y: auto; /* Добавляем вертикальную прокрутку, чтобы текст не выходил за пределы карточки, если его слишком много */
  max-height: 80%; /* Ограничиваем высоту текста, чтобы он не занимал всю карточку */
  padding: 10px; /* Отступы внутри, чтобы текст не прилипал к границам карточки */
}

/* Эффект при наведении на карточку */
.card:hover {
  transform: scale(
    1.4
  ); /* Увеличиваем карточку при наведении, создавая эффект акцента */
  z-index: 1; /* Поднимаем карточку выше других элементов, чтобы она не перекрывалась соседними при увеличении */
}

/* Изменение стиля текста при наведении на карточку */
.card:hover p {
  color: #eff5f1; /* Меняем цвет текста на светлый, чтобы он выделялся при увеличении карточки */
}

/* Адаптивные стили для меньших экранов */

/* Когда ширина экрана меньше или равна 600 пикселям */
@media (max-width: 600px) {
  .gallery-container {
    grid-template-columns: repeat(
      2,
      1fr
    ); /* Отображаем по две карточки в ряд для удобного просмотра на планшетах */
  }
}

/* Когда ширина экрана меньше или равна 400 пикселям */
@media (max-width: 400px) {
  .gallery-container {
    grid-template-columns: 1fr; /* Отображаем по одной карточке в ряд на очень маленьких экранах, например, телефонах */
  }
}

/* Стили для секции "Контакты" */

#contact {
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),
    /* Добавляем градиент для затемнения фонового изображения */
      url("../assets/image/cover_contect.webp"); /* Фоновое изображение для секции "Контакты" */
  background-size: cover; /* Изображение заполняет всю секцию */
  background-position: center; /* Центрируем изображение по горизонтали и вертикали */
  background-attachment: fixed; /* Закрепляем фон, чтобы он не двигался при прокрутке */
  color: #ec5c08; /* Основной цвет текста */
  padding: 40px 20px; /* Внутренние отступы: 40px сверху и снизу, 20px справа и слева */
  text-align: center; /* Выравнивание текста по центру */
}

#contact form {
  max-width: 600px; /* Ограничиваем максимальную ширину формы до 600 пикселей для лучшего восприятия */
  margin: 0 auto; /* Центрируем форму по горизонтали */
  display: flex; /* Используем flex для удобной компоновки элементов формы */
  flex-direction: column; /* Размещаем элементы формы друг под другом */
  align-items: center; /* Выравниваем все элементы формы по центру */
}

#contact label {
  color: #ec5c08; /* Цвет текста для меток формы */
  font-size: 1.8em; /* Размер шрифта для меток, чтобы они были хорошо видны */
  display: block; /* Каждая метка занимает всю ширину строки */
  margin-bottom: 5px; /* Отступ снизу для добавления пространства между меткой и элементом формы */
}

#contact input,
#contact textarea {
  width: 100%; /* Поля ввода и текстовая область занимают всю доступную ширину для адаптивности */
  max-width: 500px; /* Ограничиваем максимальную ширину полей, чтобы они не растягивались слишком сильно на больших экранах */
  padding: 10px; /* Внутренние отступы для удобного ввода текста */
  margin: 10px 0; /* Добавляем отступы сверху и снизу для разделения элементов */
  border: none; /* Убираем стандартную рамку поля ввода */
  border-radius: 5px; /* Скругляем углы для придания современного вида */
  background-color: rgba(
    11,
    83,
    32,
    0.65
  ); /* Полупрозрачный темно-зеленый фон для соответствия общей цветовой гамме */
  color: #eff5f1; /* Цвет текста внутри полей ввода — светло-зеленый для контраста с фоном */
  font-size: 1.2em; /* Увеличиваем размер шрифта для улучшения читабельности */
}

#contact input::placeholder,
#contact textarea::placeholder {
  color: #d0e6d5; /* Цвет текста подсказок внутри полей ввода — светло-зеленый */
  font-style: italic; /* Делаем текст подсказки курсивом для его выделения */
}

#contact button {
  padding: 10px 20px; /* Отступы внутри кнопки для увеличения кликабельной области */
  background-color: #ec5c08; /* Оранжевый цвет кнопки для выделения её на фоне */
  color: #0b5320; /* Темно-зеленый цвет текста для кнопки */
  border: none; /* Убираем стандартную рамку кнопки */
  border-radius: 5px; /* Скругляем углы кнопки для современного стиля */
  cursor: pointer; /* Изменяем курсор при наведении на кнопку для индикации кликабельности */
  font-size: 1.2em; /* Увеличиваем размер текста на кнопке для лучшей читабельности */
  display: flex; /* Используем flexbox для правильного размещения элементов внутри кнопки */
  align-items: center; /* Выравниваем элементы по вертикали в центре */
  gap: 10px; /* Добавляем промежуток между текстом и иконкой */
  justify-content: center; /* Центрируем элементы внутри кнопки по горизонтали */
}

#contact button img {
  width: 20px; /* Устанавливаем ширину иконки кнопки на 20 пикселей для равномерного размера */
  height: 20px; /* Устанавливаем высоту иконки на 20 пикселей */
}

#contact button:hover {
  background-color: #c24903; /* Изменяем цвет фона кнопки на более темный оттенок оранжевого при наведении, чтобы добавить интерактивности */
  color: #eff5f1; /* Меняем цвет текста на светло-зеленый для улучшения контраста и создания эффекта при наведении */
}

/* Стили для подвала (footer) */
footer {
  background-color: rgba(
    0,
    0,
    0,
    0.7
  ); /* Полупрозрачный черный фон для выделения подвала на фоне страницы */
  color: #ec5c08; /* Цвет текста - ярко-оранжевый, чтобы сохранять единство цветовой схемы */
  padding: 40px 20px; /* Внешние отступы для создания пространства внутри подвала (вертикальный и горизонтальный) */
  text-align: center; /* Центрирование текста внутри подвала */
}

/* Стили для контейнера социальных ссылок */
.social-links {
  display: flex; /* Используем Flexbox для размещения иконок в одной строке */
  justify-content: center; /* Центрируем иконки социальных сетей по горизонтали */
  gap: 20px; /* Расстояние между иконками - 20 пикселей */
}

/* Стили для иконок социальных сетей */
.social-links img {
  width: 40px; /* Фиксированная ширина иконок - 40 пикселей */
  height: 40px; /* Фиксированная высота иконок - 40 пикселей */
  transition: transform 0.3s; /* Добавляем плавный переход для увеличения иконок при наведении */
}

/* Эффект при наведении на иконки социальных сетей */
.social-links img:hover {
  transform: scale(
    1.5
  ); /* Увеличиваем иконку в 1.5 раза при наведении для создания эффекта интерактивности */
}
